<?xml version="1.0"?>
<testsuites tests="85" name="Hurl" time="0" failures="0"><testsuite name="tests/assert_base64.hurl" tests="1"><testcase name="GET http://localhost:8000/assert-base64"/></testsuite><testsuite name="tests/assert_header.hurl" tests="1"><testcase name="GET http://localhost:8000/assert-header"/></testsuite><testsuite name="tests/assert_json.hurl" tests="4"><testcase name="GET http://localhost:8000/assert-json"/><testcase name="GET http://localhost:8000/assert-json/index"/><testcase name="GET http://localhost:8000/assert-json"/><testcase name="GET http://localhost:8000/assert-json/list"/></testsuite><testsuite name="tests/assert_match.hurl" tests="1"><testcase name="GET http://localhost:8000/assert-match"/></testsuite><testsuite name="tests/assert_regex.hurl" tests="1"><testcase name="GET http://localhost:8000/assert-regex"/></testsuite><testsuite name="tests/assert_status_code.hurl" tests="3"><testcase name="GET http://localhost:8000/assert-status-code"/><testcase name="GET http://localhost:8000/assert-status-code"/><testcase name="GET http://localhost:8000/assert-status-code"/></testsuite><testsuite name="tests/assert_xpath.hurl" tests="1"><testcase name="GET http://localhost:8000/assert-xpath"/></testsuite><testsuite name="tests/basic_authentication.hurl" tests="1"><testcase name="GET http://localhost:8000/basic-authentication"/></testsuite><testsuite name="tests/bom.hurl" tests="1"><testcase name="GET http://localhost:8000/utf8_bom"/></testsuite><testsuite name="tests/bytes.hurl" tests="1"><testcase name="GET http://localhost:8000/bytes"/></testsuite><testsuite name="tests/capture_and_assert.hurl" tests="1"><testcase name="GET http://localhost:8000/capture-and-assert"/></testsuite><testsuite name="tests/captures.hurl" tests="3"><testcase name="GET http://localhost:8000/captures"/><testcase name="GET http://localhost:8000/captures-check?param1=value1&amp;param2=Bob"/><testcase name="GET http://localhost:8000/captures-json"/></testsuite><testsuite name="tests/color.hurl" tests="0"/><testsuite name="tests/compressed.hurl" tests="5"><testcase name="GET http://localhost:8000/compressed/none"/><testcase name="GET http://localhost:8000/compressed/gzip"/><testcase name="GET http://localhost:8000/compressed/zlib"/><testcase name="GET http://localhost:8000/compressed/brotli"/><testcase name="GET http://localhost:8000/compressed/brotli_identity"/></testsuite><testsuite name="tests/cookie_file.hurl" tests="1"><testcase name="GET http://localhost:8000/cookie_file"/></testsuite><testsuite name="tests/cookies.hurl" tests="9"><testcase name="GET http://localhost:8000/cookies/set-request-cookie1-valueA"/><testcase name="GET http://localhost:8000/cookies/assert-that-cookie1-is-not-in-session"/><testcase name="GET http://localhost:8000/cookies/set-multiple-request-cookies"/><testcase name="GET http://localhost:8000/cookies/set-session-cookie2-valueA"/><testcase name="GET http://localhost:8000/cookies/assert-that-cookie2-is-valueA"/><testcase name="GET http://localhost:8000/cookies/assert-that-cookie2-is-valueA-and-valueB"/><testcase name="GET http://localhost:8000/cookies/delete-cookie2"/><testcase name="GET http://localhost:8000/cookies/assert-that-cookie2-is-not-in-session"/><testcase name="GET http://localhost:8000/cookies/set"/></testsuite><testsuite name="tests/cookie_storage.hurl" tests="2"><testcase name="GET http://localhost:8000/cookie-storage/assert-that-cookie1-is-valueA"/><testcase name="GET http://localhost:8000/cookie-storage/assert-that-cookie1-is-not-in-session"/></testsuite><testsuite name="tests/delete.hurl" tests="1"><testcase name="DELETE http://localhost:8000/delete"/></testsuite><testsuite name="tests/empty.hurl" tests="0"/><testsuite name="tests/encoding.hurl" tests="2"><testcase name="GET http://localhost:8000/encoding/utf8"/><testcase name="GET http://localhost:8000/encoding/latin1"/></testsuite><testsuite name="tests/error_assert_base64.hurl" tests="1"><testcase name="GET http://localhost:8000/assert-base64"><failure/><failure/><failure message="actual value is &lt;hex, 6c696e65310a6c696e65320d0a6c696e65330a;&gt;"/><failure message="Assert Body Value">actual value is &lt;hex, 6c696e65310a6c696e65320d0a6c696e65330a;&gt;</failure></testcase></testsuite><testsuite name="tests/error_assert_bytearray.hurl" tests="1"><testcase name="GET http://localhost:8000/error-assert-bytearray"><failure/><failure/><failure message="actual:   byte array &lt;ff&gt;&#10;expected: byte array &lt;00&gt;"/><failure message="actual:   byte array &lt;a8100ae6aa1940d0b663bb31cd466142ebbdbd5187131b92d93818987832eb89&gt;&#10;expected: byte array &lt;a8100ae6aa1940d0b663bb31cd466142ebbdbd5187131b92d93818987832eb88&gt;"/><failure message="Assert Failure">actual:   byte array &lt;ff&gt;
expected: byte array &lt;00&gt;</failure><failure message="Assert Failure">actual:   byte array &lt;a8100ae6aa1940d0b663bb31cd466142ebbdbd5187131b92d93818987832eb89&gt;
expected: byte array &lt;a8100ae6aa1940d0b663bb31cd466142ebbdbd5187131b92d93818987832eb88&gt;</failure></testcase></testsuite><testsuite name="tests/error_assert_content_encoding.hurl" tests="1"><testcase name="GET http://localhost:8000/error/content-encoding"><failure/><failure/><failure message="Compression unknown is not supported"/><failure message="Decompression Error">Compression unknown is not supported</failure></testcase></testsuite><testsuite name="tests/error_assert_decompress.hurl" tests="1"><testcase name="GET http://localhost:8000/error-assert-decompress"><failure/><failure/><failure message="Could not uncompress response with gzip"/><failure message="Decompression Error">Could not uncompress response with gzip</failure></testcase></testsuite><testsuite name="tests/error_assert_file.hurl" tests="1"><testcase name="GET http://localhost:8000/error-assert-file"><failure/><failure/><failure message="actual value is &lt;hex, 48656c6c6f;&gt;"/><failure message="Assert Body Value">actual value is &lt;hex, 48656c6c6f;&gt;</failure></testcase></testsuite><testsuite name="tests/error_assert_header_not_found.hurl" tests="1"><testcase name="GET http://localhost:8000/error-assert-header-not-found"><failure/><failure/><failure message="This header has not been found in the response"/><failure message="Header not Found">This header has not been found in the response</failure></testcase></testsuite><testsuite name="tests/error_assert_header_value.hurl" tests="1"><testcase name="GET http://localhost:8000/error-assert-header-value"><failure/><failure/><failure message="actual value is &lt;text/html; charset=utf-8&gt;"/><failure message="Assert Header Value">actual value is &lt;text/html; charset=utf-8&gt;</failure></testcase></testsuite><testsuite name="tests/error_assert_http_version.hurl" tests="1"><testcase name="GET http://localhost:8000/error-assert/http-version"><failure message="actual value is &lt;1.0&gt;"/><failure/><failure message="Assert Http Version">actual value is &lt;1.0&gt;</failure></testcase></testsuite><testsuite name="tests/error_assert_invalid_predicate_type.hurl" tests="1"><testcase name="GET http://localhost:8000/error-assert-invalid-predicate-type"><failure/><failure/><failure message="actual:   string &lt;text/html; charset=utf-8&gt;&#10;expected: int &lt;1&gt;"/><failure message="Assert Failure">actual:   string &lt;text/html; charset=utf-8&gt;
expected: int &lt;1&gt;</failure></testcase></testsuite><testsuite name="tests/error_assert_match_utf8.hurl" tests="1"><testcase name="GET http://localhost:8000/error-assert/match-utf8"><failure/><failure/><failure message="The body can not be decoded with charset 'utf-8'"/><failure message="Invalid Decoding">The body can not be decoded with charset 'utf-8'</failure></testcase></testsuite><testsuite name="tests/error_assert_query_cookie.hurl" tests="1"><testcase name="GET http://localhost:8000/error-assert-query-cookie"><failure/><failure/><failure/><failure message="actual:   none&#10;expected: bool &lt;false&gt;"/><failure/><failure/><failure message="actual:   unit&#10;expected: bool &lt;true&gt;&#10;&gt;&gt;&gt; types between actual and expected are not consistent"/><failure message="actual:   unit&#10;expected: not bool &lt;true&gt;&#10;&gt;&gt;&gt; types between actual and expected are not consistent"/><failure message="Assert Failure">actual:   none
expected: bool &lt;false&gt;</failure><failure message="Assert Failure">actual:   unit
expected: bool &lt;true&gt;
&gt;&gt;&gt; types between actual and expected are not consistent</failure><failure message="Assert Failure">actual:   unit
expected: not bool &lt;true&gt;
&gt;&gt;&gt; types between actual and expected are not consistent</failure></testcase></testsuite><testsuite name="tests/error_assert_query_invalid_regex.hurl" tests="1"><testcase name="GET http://localhost:8000/error-assert-query-invalid-regex"><failure/><failure/><failure message="Regex expression is not valid"/><failure message="Invalid regex">Regex expression is not valid</failure></testcase></testsuite><testsuite name="tests/error_assert_query_invalid_xpath.hurl" tests="1"><testcase name="GET http://localhost:8000/utf8"><failure/><failure/><failure message="The xpath expression is not valid"/><failure message="Invalid xpath expression">The xpath expression is not valid</failure></testcase></testsuite><testsuite name="tests/error_assert_status.hurl" tests="1"><testcase name="GET http://localhost:8000/not_found"><failure/><failure message="actual value is &lt;404&gt;"/><failure message="Assert Status">actual value is &lt;404&gt;</failure></testcase></testsuite><testsuite name="tests/error_assert_template_variable_not_found.hurl" tests="1"><testcase name="GET http://localhost:8000/error-assert-template-variable-not-found"><failure/><failure/><failure message="You must set the variable content_type"/><failure message="Undefined Variable">You must set the variable content_type</failure></testcase></testsuite><testsuite name="tests/error_assert_value_error.hurl" tests="1"><testcase name="GET http://localhost:8000/error-assert-value"><failure/><failure/><failure message="actual:   string &lt;text/html; charset=utf-8&gt;&#10;expected: string &lt;XXX&gt;"/><failure message="actual:   string &lt;text/html; charset=utf-8&gt;&#10;expected: string &lt;text/html; charset=utf-8&gt;"/><failure message="actual:   none&#10;expected: string &lt;000001&gt;"/><failure message="actual:   [int &lt;1&gt;, int &lt;2&gt;, int &lt;3&gt;]&#10;expected: includes int &lt;100&gt;"/><failure message="actual:   [int &lt;1&gt;, int &lt;2&gt;, int &lt;3&gt;]&#10;expected: not contains string &lt;Hello&gt;&#10;&gt;&gt;&gt; types between actual and expected are not consistent"/><failure message="actual:   int &lt;2&gt;&#10;expected: greater than int &lt;5&gt;"/><failure message="actual:   int &lt;2&gt;&#10;expected: float"/><failure message="actual:   byte array &lt;7b202276616c756573223a205b312c322c335d2c2022636f756e74223a20327d&gt;&#10;expected: contains byte array &lt;00&gt;"/><failure message="Assert Failure">actual:   string &lt;text/html; charset=utf-8&gt;
expected: string &lt;XXX&gt;</failure><failure message="Assert Failure">actual:   string &lt;text/html; charset=utf-8&gt;
expected: string &lt;text/html; charset=utf-8&gt;</failure><failure message="Assert Failure">actual:   none
expected: string &lt;000001&gt;</failure><failure message="Assert Failure">actual:   [int &lt;1&gt;, int &lt;2&gt;, int &lt;3&gt;]
expected: includes int &lt;100&gt;</failure><failure message="Assert Failure">actual:   [int &lt;1&gt;, int &lt;2&gt;, int &lt;3&gt;]
expected: not contains string &lt;Hello&gt;
&gt;&gt;&gt; types between actual and expected are not consistent</failure><failure message="Assert Failure">actual:   int &lt;2&gt;
expected: greater than int &lt;5&gt;</failure><failure message="Assert Failure">actual:   int &lt;2&gt;
expected: float</failure><failure message="Assert Failure">actual:   byte array &lt;7b202276616c756573223a205b312c322c335d2c2022636f756e74223a20327d&gt;
expected: contains byte array &lt;00&gt;</failure></testcase></testsuite><testsuite name="tests/error_assert_variable.hurl" tests="1"><testcase name="GET http://localhost:8000/error-assert-variable"><failure/><failure/><failure message="actual:   none&#10;expected: string &lt;tata&gt;"/><failure message="You must set the variable unknown"/><failure message="actual:   int &lt;200&gt;&#10;expected: string &lt;text/html; charset=utf-8&gt;"/><failure message="actual:   int &lt;200&gt;&#10;expected: string &lt;0&gt;"/><failure message="Assert Failure">actual:   none
expected: string &lt;tata&gt;</failure><failure message="Undefined Variable">You must set the variable unknown</failure><failure message="Assert Failure">actual:   int &lt;200&gt;
expected: string &lt;text/html; charset=utf-8&gt;</failure><failure message="Assert Failure">actual:   int &lt;200&gt;
expected: string &lt;0&gt;</failure></testcase></testsuite><testsuite name="tests/error_assert_xpath.hurl" tests="1"><testcase name="GET http://localhost:8000/error-assert-xpath"><failure/><failure/><failure message="The xpath expression is not valid"/><failure message="Invalid xpath expression">The xpath expression is not valid</failure></testcase></testsuite><testsuite name="tests/error_body_json.hurl" tests="1"><testcase name="(No request details)"><failure message="Invalid Json">actual value is &lt;invalid&gt;</failure></testcase></testsuite><testsuite name="tests/error_connect_timeout.hurl" tests="1"><testcase name="(No request details)"><failure message="Http Connection">(28) Connection timed out after 1002 milliseconds</failure></testcase></testsuite><testsuite name="tests/error_file_read_access.hurl" tests="1"><testcase name="(No request details)"><failure message="File ReadAccess">File tests/does_not_exist can not be read</failure></testcase></testsuite><testsuite name="tests/error_http_connection.hurl" tests="1"><testcase name="(No request details)"><failure message="Http Connection">(6) Could not resolve host: unknown</failure></testcase></testsuite><testsuite name="tests/error_invalid_jsonpath.hurl" tests="1"><testcase name="GET http://localhost:8000/error-invalid-jsonpath"><failure/><failure/><failure message="the jsonpath expression '' is not valid"/><failure message="Invalid jsonpath">the jsonpath expression '' is not valid</failure></testcase></testsuite><testsuite name="tests/error_invalid_url.hurl" tests="1"><testcase name="(No request details)"><failure message="Http Connection">(3) URL using bad/illegal format or missing URL</failure></testcase></testsuite><testsuite name="tests/error_invalid_xml.hurl" tests="1"><testcase name="GET http://localhost:8000/error-invalid-xml"><failure/><failure/><failure message="The Http response is not a valid XML"/><failure message="Invalid XML">The Http response is not a valid XML</failure></testcase></testsuite><testsuite name="tests/error_max_redirect.hurl" tests="1"><testcase name="(No request details)"><failure message="Http Connection">Too many redirect</failure></testcase></testsuite><testsuite name="tests/error_multipart_form_data.hurl" tests="1"><testcase name="(No request details)"><failure message="File ReadAccess">File tests/unknown can not be read</failure></testcase></testsuite><testsuite name="tests/error_predicate.hurl" tests="1"><testcase name="GET http://localhost:8000/predicate/error/type"><failure/><failure/><failure message="actual:   bool &lt;true&gt;&#10;expected: string &lt;true&gt;"/><failure message="actual:   int &lt;1&gt;&#10;expected: int &lt;0&gt;"/><failure message="actual:   string &lt;0&gt;&#10;expected: int &lt;0&gt;"/><failure message="actual:   string &lt;&gt;&#10;expected: int &lt;0&gt;"/><failure message="actual:   float &lt;1.0&gt;&#10;expected: float &lt;1.100000000000000000&gt;"/><failure message="actual:   string &lt;0&gt;&#10;expected: starts with string &lt;hi&gt;"/><failure message="actual:   string &lt;0&gt;&#10;expected: ends with string &lt;hi&gt;"/><failure message="actual:   string &lt;0&gt;&#10;expected: contains string &lt;hi&gt;"/><failure message="actual:   string &lt;0&gt;&#10;expected: matches regex &lt;hi&gt;"/><failure message="Type from query result and subquery do not match"/><failure message="actual:   none&#10;expected: something"/><failure message="actual:   string &lt;0&gt;&#10;expected: not something"/><failure message="actual:   int &lt;3&gt;&#10;expected: int &lt;2&gt;"/><failure message="Assert Failure">actual:   bool &lt;true&gt;
expected: string &lt;true&gt;</failure><failure message="Assert Failure">actual:   int &lt;1&gt;
expected: int &lt;0&gt;</failure><failure message="Assert Failure">actual:   string &lt;0&gt;
expected: int &lt;0&gt;</failure><failure message="Assert Failure">actual:   string &lt;&gt;
expected: int &lt;0&gt;</failure><failure message="Assert Failure">actual:   float &lt;1.0&gt;
expected: float &lt;1.100000000000000000&gt;</failure><failure message="Assert Failure">actual:   string &lt;0&gt;
expected: starts with string &lt;hi&gt;</failure><failure message="Assert Failure">actual:   string &lt;0&gt;
expected: ends with string &lt;hi&gt;</failure><failure message="Assert Failure">actual:   string &lt;0&gt;
expected: contains string &lt;hi&gt;</failure><failure message="Assert Failure">actual:   string &lt;0&gt;
expected: matches regex &lt;hi&gt;</failure><failure message="Subquery error">Type from query result and subquery do not match</failure><failure message="Assert Failure">actual:   none
expected: something</failure><failure message="Assert Failure">actual:   string &lt;0&gt;
expected: not something</failure><failure message="Assert Failure">actual:   int &lt;3&gt;
expected: int &lt;2&gt;</failure></testcase></testsuite><testsuite name="tests/error_query_header_not_found.hurl" tests="1"><testcase name="GET http://localhost:8000/error-query-header-not-found"><failure/><failure/><failure message="This header has not been found in the response"/><failure message="Header not Found">This header has not been found in the response</failure></testcase></testsuite><testsuite name="tests/error_query_invalid_json.hurl" tests="1"><testcase name="GET http://localhost:8000/error-query-invalid-json"><failure/><failure/><failure message="The http response is not a valid json"/><failure message="Invalid Json">The http response is not a valid json</failure></testcase></testsuite><testsuite name="tests/error_query_invalid_utf8.hurl" tests="1"><testcase name="GET http://localhost:8000/error-query-invalid-utf8"><failure/><failure/><failure message="The body can not be decoded with charset 'utf-8'"/><failure message="Invalid Decoding">The body can not be decoded with charset 'utf-8'</failure></testcase></testsuite><testsuite name="tests/error_template_variable_not_found.hurl" tests="1"><testcase name="(No request details)"><failure message="Undefined Variable">You must set the variable url</failure></testcase></testsuite><testsuite name="tests/error_template_variable_not_renderable.hurl" tests="2"><testcase name="GET http://localhost:8000/get-list"><failure/><failure/></testcase><testcase name="(No request details)"><failure message="Unrenderable Variable">value [1,2,3] can not be rendered</failure></testcase></testsuite><testsuite name="tests/error_timeout.hurl" tests="1"><testcase name="(No request details)"><failure message="Http Connection">(28) Operation timed out after 1001 milliseconds with 0 bytes received</failure></testcase></testsuite><testsuite name="tests/expect.hurl" tests="1"><testcase name="POST http://localhost:8000/expect"/></testsuite><testsuite name="tests/follow_redirect.hurl" tests="3"><testcase name="GET http://localhost:8000/follow-redirect"/><testcase name="GET http://localhost:8000/following-redirect"/><testcase name="GET http://localhost:8000/followed-redirect"/></testsuite><testsuite name="tests/form_params.hurl" tests="2"><testcase name="POST http://localhost:8000/form-params"/><testcase name="POST http://localhost:8000/form-params"/></testsuite><testsuite name="tests/headers.hurl" tests="8"><testcase name="GET http://localhost:8000/default-headers"/><testcase name="GET http://localhost:8000/default-headers"/><testcase name="GET http://localhost:8000/default-headers"/><testcase name="GET http://localhost:8000/custom-headers"/><testcase name="GET http://localhost:8000/custom-headers-utf8"/><testcase name="GET http://localhost:8000/custom-headers-value"/><testcase name="GET http://localhost:8000/custom-headers-quote"/><testcase name="GET http://localhost:8000/response-headers"/></testsuite><testsuite name="tests/hello.hurl" tests="4"><testcase name="GET http://localhost:8000/hello"/><testcase name="GET http://localhost:8000/hello"/><testcase name="GET http://localhost:8000/hello"/><testcase name="GET http://localhost:8000/hello"/></testsuite><testsuite name="tests/ignore_asserts.hurl" tests="1"><testcase name="GET http://localhost:8000/ignore_asserts"/></testsuite><testsuite name="tests/include.hurl" tests="1"><testcase name="GET http://localhost:8000/include"/></testsuite><testsuite name="tests/large.hurl" tests="1"><testcase name="GET http://localhost:8000/large"/></testsuite><testsuite name="tests/multilines.hurl" tests="1"><testcase name="GET http://localhost:8000/multilines"/></testsuite><testsuite name="tests/multipart_form_data.hurl" tests="1"><testcase name="POST http://localhost:8000/multipart-form-data"/></testsuite><testsuite name="tests/no_entry.hurl" tests="0"/><testsuite name="tests/non_utf8.hurl" tests="1"><testcase name="GET http://localhost:8000/non-utf8"/></testsuite><testsuite name="tests/output.hurl" tests="2"><testcase name="POST http://localhost:8000/output/endpoint1"/><testcase name="GET http://localhost:8000/output/endpoint2"/></testsuite><testsuite name="tests/patch.hurl" tests="1"><testcase name="PATCH http://localhost:8000/patch/file.txt"/></testsuite><testsuite name="tests/post_base64.hurl" tests="1"><testcase name="POST http://localhost:8000/post-base64"/></testsuite><testsuite name="tests/post_bytes.hurl" tests="1"><testcase name="POST http://localhost:8000/post-bytes"/></testsuite><testsuite name="tests/post_file.hurl" tests="2"><testcase name="POST http://localhost:8000/post-file"/><testcase name="POST http://localhost:8000/post-file"/></testsuite><testsuite name="tests/post_json.hurl" tests="8"><testcase name="POST http://localhost:8000/post-json"/><testcase name="POST http://localhost:8000/post-json-array"/><testcase name="POST http://localhost:8000/post-json-string"/><testcase name="POST http://localhost:8000/post-json-number"/><testcase name="POST http://localhost:8000/post-json-numbers"/><testcase name="POST http://localhost:8000/post-json-boolean"/><testcase name="GET http://localhost:8000/get-name"/><testcase name="POST http://localhost:8000/check_name"/></testsuite><testsuite name="tests/post_multilines.hurl" tests="3"><testcase name="POST http://localhost:8000/post-multilines"/><testcase name="GET http://localhost:8000/get-bob-age"/><testcase name="POST http://localhost:8000/post-multilines"/></testsuite><testsuite name="tests/post_xml.hurl" tests="2"><testcase name="POST http://localhost:8000/post-xml"/><testcase name="POST http://localhost:8000/post-xml-no-prolog"/></testsuite><testsuite name="tests/predicates-string.hurl" tests="3"><testcase name="GET http://localhost:8000/predicates-string"/><testcase name="GET http://localhost:8000/predicates-string-empty"/><testcase name="GET http://localhost:8000/predicates-string-unicode"/></testsuite><testsuite name="tests/proxy.hurl" tests="1"><testcase name="GET http://localhost:8000/proxy"/></testsuite><testsuite name="tests/put.hurl" tests="1"><testcase name="PUT http://localhost:8000/put"/></testsuite><testsuite name="tests/querystring_params.hurl" tests="4"><testcase name="GET http://localhost:8000/querystring-params?param1=value1&amp;param2=&amp;param3=a%3Db&amp;param4=1%2C2%2C3"/><testcase name="GET http://localhost:8000/querystring-params?param1=value1&amp;param2=&amp;param3=a%3db&amp;param4=1,2,3"/><testcase name="GET http://localhost:8000/querystring-params?param1=value1&amp;param2=&amp;param3=a%3Db&amp;param4=1%2C2%2C3"/><testcase name="GET http://localhost:8000/querystring-params-encoded?value1=/&amp;value2=%2F&amp;value3=%2F"/></testsuite><testsuite name="tests/redirect.hurl" tests="2"><testcase name="GET http://localhost:8000/redirect"/><testcase name="GET http://localhost:8000/redirected"/></testsuite><testsuite name="tests/subquery_count.hurl" tests="1"><testcase name="GET http://localhost:8000/subquery-count"/></testsuite><testsuite name="tests/test_mode.hurl" tests="1"><testcase name="GET http://localhost:8000/test-mode"/></testsuite><testsuite name="tests/url.hurl" tests="3"><testcase name="GET http://localhost:8000/~user"/><testcase name="GET http://localhost:8000/%7Euser"/><testcase name="GET http://localhost:8000/!$&amp;()*+,;=:@[]"/></testsuite><testsuite name="tests/user_in_url.hurl" tests="1"><testcase name="GET http://bob:secret@localhost:8000/basic-authentication"/></testsuite><testsuite name="tests/utf8.hurl" tests="1"><testcase name="GET http://localhost:8000/utf8"/></testsuite><testsuite name="tests/variables.hurl" tests="1"><testcase name="POST http://localhost:8000/variables"/></testsuite></testsuites>
